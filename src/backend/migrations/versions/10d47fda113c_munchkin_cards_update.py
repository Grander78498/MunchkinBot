# pylint: skip-file
"""Munchkin_cards_updaTE

Revision ID: 10d47fda113c
Revises: a443e19ad380
Create Date: 2025-04-23 11:11:58.516750

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10d47fda113c'
down_revision: Union[str, None] = 'a443e19ad380'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('gameitem', 'item_property')
    op.drop_column('gameitem', 'item_type')
    op.drop_column('item', 'item_property')
    op.drop_column('item', 'item_type')
    op.drop_column('monster', 'monster_type')
    sa.Enum('FLAME', 'WOODEN', 'STICK',
            name='itemproperty').drop(op.get_bind())
    sa.Enum('HEADGEAR', 'ARMOR', 'FOOTGEAR', 'HAND',
            name='itemtype').drop(op.get_bind())
    sa.Enum('UNDEAD', name='monstertype').drop(op.get_bind())
    op.create_table(
        'itemproperty', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('item_property',
                  sqlmodel.sql.sqltypes.AutoString(length=64),
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_itemproperty')))
    op.create_table(
        'itemtype', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('item_type',
                  sqlmodel.sql.sqltypes.AutoString(length=64),
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_itemtype')))
    op.create_table(
        'monstertype', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('monster_type',
                  sqlmodel.sql.sqltypes.AutoString(length=64),
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_monstertype')))
    op.create_table(
        'statstype', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stats_type',
                  sqlmodel.sql.sqltypes.AutoString(length=64),
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_statstype')))
    op.create_table(
        'stats', sa.Column('level', sa.SmallInteger(), nullable=False),
        sa.Column('strength', sa.SmallInteger(), nullable=False),
        sa.Column('treasure_count', sa.Integer(), nullable=False),
        sa.Column('reward_level_count', sa.Integer(), nullable=False),
        sa.Column('monster_type_id', sa.Integer(), nullable=True),
        sa.Column('card_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['card_id'], ['card.id'],
                                name=op.f('fk_stats_card_id_card')),
        sa.ForeignKeyConstraint(
            ['monster_type_id'], ['monstertype.id'],
            name=op.f('fk_stats_monster_type_id_monstertype')),
        sa.PrimaryKeyConstraint('card_id', name=op.f('pk_stats')))
    op.create_table(
        'monstercombat', sa.Column('monster_id', sa.Integer(), nullable=False),
        sa.Column('combat_id', sa.Integer(), nullable=False),
        sa.Column('modifier', sa.SmallInteger(), nullable=False),
        sa.Column('treasure_count', sa.SmallInteger(), nullable=False),
        sa.Column('reward_level_count', sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ['combat_id'], ['combat.id'],
            name=op.f('fk_monstercombat_combat_id_combat')),
        sa.ForeignKeyConstraint(
            ['monster_id'], ['monster.card_id'],
            name=op.f('fk_monstercombat_monster_id_monster')),
        sa.PrimaryKeyConstraint('monster_id',
                                'combat_id',
                                name=op.f('pk_monstercombat')))
    op.create_table(
        'munchkinstats', sa.Column('munchkin_id', sa.Integer(),
                                   nullable=False),
        sa.Column('stats_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['munchkin_id'], ['munchkin.id'],
            name=op.f('fk_munchkinstats_munchkin_id_munchkin')),
        sa.ForeignKeyConstraint(['stats_id'], ['stats.card_id'],
                                name=op.f('fk_munchkinstats_stats_id_stats')),
        sa.PrimaryKeyConstraint('munchkin_id',
                                'stats_id',
                                name=op.f('pk_munchkinstats')))
    op.add_column('gameitem',
                  sa.Column('item_type_id', sa.Integer(), nullable=True))
    op.add_column('gameitem',
                  sa.Column('item_property_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_gameitem_item_property_id_itemproperty'),
                          'gameitem', 'itemproperty', ['item_property_id'],
                          ['id'])
    op.create_foreign_key(op.f('fk_gameitem_item_type_id_itemtype'),
                          'gameitem', 'itemtype', ['item_type_id'], ['id'])
    op.add_column('item',
                  sa.Column('item_property_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_item_item_property_id_itemproperty'),
                          'item', 'itemproperty', ['item_property_id'], ['id'])
    op.add_column('monster',
                  sa.Column('monster_type_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_monster_monster_type_id_monstertype'),
                          'monster', 'monstertype', ['monster_type_id'],
                          ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('UNDEAD', name='monstertype').create(op.get_bind())
    sa.Enum('HEADGEAR', 'ARMOR', 'FOOTGEAR', 'HAND',
            name='itemtype').create(op.get_bind())
    sa.Enum('FLAME', 'WOODEN', 'STICK',
            name='itemproperty').create(op.get_bind())
    op.add_column(
        'monster',
        sa.Column('monster_type',
                  postgresql.ENUM('UNDEAD',
                                  name='monstertype',
                                  create_type=False),
                  autoincrement=False,
                  nullable=True))
    op.drop_constraint(op.f('fk_monster_monster_type_id_monstertype'),
                       'monster',
                       type_='foreignkey')
    op.drop_column('monster', 'monster_type_id')
    op.add_column(
        'item',
        sa.Column('item_type',
                  postgresql.ENUM('HEADGEAR',
                                  'ARMOR',
                                  'FOOTGEAR',
                                  'HAND',
                                  name='itemtype',
                                  create_type=False),
                  autoincrement=False,
                  nullable=True))
    op.add_column(
        'item',
        sa.Column('item_property',
                  postgresql.ENUM('FLAME',
                                  'WOODEN',
                                  'STICK',
                                  name='itemproperty',
                                  create_type=False),
                  autoincrement=False,
                  nullable=True))
    op.drop_constraint(op.f('fk_item_item_property_id_itemproperty'),
                       'item',
                       type_='foreignkey')
    op.drop_column('item', 'item_property_id')
    op.add_column(
        'gameitem',
        sa.Column('item_type',
                  postgresql.ENUM('HEADGEAR',
                                  'ARMOR',
                                  'FOOTGEAR',
                                  'HAND',
                                  name='itemtype',
                                  create_type=False),
                  autoincrement=False,
                  nullable=True))
    op.add_column(
        'gameitem',
        sa.Column('item_property',
                  postgresql.ENUM('FLAME',
                                  'WOODEN',
                                  'STICK',
                                  name='itemproperty',
                                  create_type=False),
                  autoincrement=False,
                  nullable=True))
    op.drop_constraint(op.f('fk_gameitem_item_type_id_itemtype'),
                       'gameitem',
                       type_='foreignkey')
    op.drop_constraint(op.f('fk_gameitem_item_property_id_itemproperty'),
                       'gameitem',
                       type_='foreignkey')
    op.drop_column('gameitem', 'item_property_id')
    op.drop_column('gameitem', 'item_type_id')
    op.drop_table('munchkinstats')
    op.drop_table('monstercombat')
    op.drop_table('stats')
    op.drop_table('statstype')
    op.drop_table('monstertype')
    op.drop_table('itemtype')
    op.drop_table('itemproperty')
    # ### end Alembic commands ###
