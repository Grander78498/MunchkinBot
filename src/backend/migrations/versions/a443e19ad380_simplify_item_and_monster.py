# pylint: skip-file
"""Simplify item and monster

Revision ID: a443e19ad380
Revises: e136fc120501
Create Date: 2025-04-22 16:05:06.343966

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a443e19ad380"
down_revision: Union[str, None] = "e136fc120501"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("UNDEAD", name="monstertype").create(op.get_bind())
    op.create_table(
        "monster",
        sa.Column("level", sa.SmallInteger(), nullable=False),
        sa.Column("strength", sa.SmallInteger(), nullable=False),
        sa.Column("treasure_count", sa.Integer(), nullable=False),
        sa.Column("reward_level_count", sa.Integer(), nullable=False),
        sa.Column(
            "monster_type",
            postgresql.ENUM("UNDEAD", name="monstertype", create_type=False),
            nullable=True,
        ),
        sa.Column("card_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["card_id"], ["card.id"], name=op.f("fk_monster_card_id_card")
        ),
        sa.PrimaryKeyConstraint("card_id", name=op.f("pk_monster")),
    )
    op.alter_column("card", "description", existing_type=sa.TEXT(), nullable=False)
    op.drop_constraint("uq_gamecard_image_path", "gamecard", type_="unique")
    op.drop_constraint("uq_gamecard_name", "gamecard", type_="unique")
    op.drop_column("gamecard", "description")
    op.drop_column("gamecard", "name")
    op.drop_column("gamecard", "card_type")
    op.drop_column("gamecard", "image_path")
    op.alter_column(
        "gameitem",
        "runaway_bonus",
        existing_type=sa.INTEGER(),
        type_=sa.SmallInteger(),
        existing_nullable=True,
    )
    op.drop_constraint("uq_gameitem_description", "gameitem", type_="unique")
    op.drop_constraint("uq_gameitem_image_path", "gameitem", type_="unique")
    op.drop_constraint("uq_gameitem_name", "gameitem", type_="unique")
    op.drop_column("gameitem", "image_path")
    op.drop_column("gameitem", "runway_bonus")
    op.drop_column("gameitem", "card_type")
    op.drop_column("gameitem", "description")
    op.drop_column("gameitem", "name")
    op.drop_constraint("uq_item_description", "item", type_="unique")
    op.drop_constraint("uq_item_image_path", "item", type_="unique")
    op.drop_constraint("uq_item_name", "item", type_="unique")
    op.drop_column("item", "description")
    op.drop_column("item", "name")
    op.drop_column("item", "card_type")
    op.drop_column("item", "image_path")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "item",
        sa.Column(
            "image_path", sa.VARCHAR(length=64), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "item",
        sa.Column(
            "card_type",
            postgresql.ENUM("DOOR", "TREASURE", name="cardtype", create_type=False),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "item",
        sa.Column("name", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    )
    op.add_column(
        "item", sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_unique_constraint("uq_item_name", "item", ["name"])
    op.create_unique_constraint("uq_item_image_path", "item", ["image_path"])
    op.create_unique_constraint("uq_item_description", "item", ["description"])
    op.add_column(
        "gameitem",
        sa.Column("name", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    )
    op.add_column(
        "gameitem",
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "gameitem",
        sa.Column(
            "card_type",
            postgresql.ENUM("DOOR", "TREASURE", name="cardtype", create_type=False),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "gameitem",
        sa.Column("runway_bonus", sa.SMALLINT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "gameitem",
        sa.Column(
            "image_path", sa.VARCHAR(length=64), autoincrement=False, nullable=False
        ),
    )
    op.create_unique_constraint("uq_gameitem_name", "gameitem", ["name"])
    op.create_unique_constraint("uq_gameitem_image_path", "gameitem", ["image_path"])
    op.create_unique_constraint("uq_gameitem_description", "gameitem", ["description"])
    op.alter_column(
        "gameitem",
        "runaway_bonus",
        existing_type=sa.SmallInteger(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.add_column(
        "gamecard",
        sa.Column(
            "image_path", sa.VARCHAR(length=64), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "gamecard",
        sa.Column(
            "card_type",
            postgresql.ENUM("DOOR", "TREASURE", name="cardtype", create_type=False),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "gamecard",
        sa.Column("name", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    )
    op.add_column(
        "gamecard",
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.create_unique_constraint("uq_gamecard_name", "gamecard", ["name"])
    op.create_unique_constraint("uq_gamecard_image_path", "gamecard", ["image_path"])
    op.alter_column("card", "description", existing_type=sa.TEXT(), nullable=True)
    op.drop_table("monster")
    sa.Enum("UNDEAD", name="monstertype").drop(op.get_bind())
    # ### end Alembic commands ###
