# pylint: skip-file
"""Delete group_id from game.

Revision ID: 3a4c3fe0b5ba
Revises: 81de717a5c61
Create Date: 2025-05-04 23:24:04.220521

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "3a4c3fe0b5ba"
down_revision: Union[str, None] = "81de717a5c61"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_game_group_id_tg_group", "game", type_="foreignkey")
    op.drop_table("tg_group")
    op.drop_column("game", "group_id")
    op.add_column(
        "item", sa.Column("item_type_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        op.f("fk_item_item_type_id_itemtype"),
        "item",
        "itemtype",
        ["item_type_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_item_item_type_id_itemtype"), "item", type_="foreignkey"
    )
    op.drop_column("item", "item_type_id")
    op.create_table(
        "tg_group",
        sa.Column("tg_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "name", sa.VARCHAR(length=32), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("tg_id", name="pk_tg_group"),
        sa.UniqueConstraint("name", name="uq_tg_group_name"),
    )
    op.add_column(
        "game", sa.Column("group_id", sa.INTEGER(), autoincrement=False)
    )
    op.create_foreign_key(
        "fk_game_group_id_tg_group", "game", "tg_group", ["group_id"], ["tg_id"]
    )
    # ### end Alembic commands ###
